const int inputPin = 36;        // Analog input pin for sine wave
const int midpoint = 2048;      // ADC midpoint (1.65V for 3.3V ESP32)
const int hysteresis = 100;     // Noise immunity threshold

volatile unsigned int cycleCount = 0;  // Count of zero-crossings
unsigned long lastPrintTime = 0;       // Timing control
bool isAbove = false;                  // State tracking

void setup() {
  Serial.begin(115200);
  analogReadResolution(12);    // Use full 12-bit resolution for ESP32
}

void loop() {
  // Read analog value and check thresholds
  int sensorValue = analogRead(inputPin);
  
  // Detect positive zero-crossing with hysteresis
  if (!isAbove && sensorValue > (midpoint + hysteresis)) {
    isAbove = true;
    cycleCount++;
  }
  // Detect negative zero-crossing with hysteresis
  else if (isAbove && sensorValue < (midpoint - hysteresis)) {
    isAbove = false;
  }

  // Print frequency every 1 second
  if (millis() - lastPrintTime >= 1000) {
    // Each full sine wave cycle has 2 zero-crossings (positive and negative)
    float frequency = cycleCount / 2.0;  // Convert crossings to full cycles
    
    Serial.print("Frequency: ");
    Serial.print(frequency);
    Serial.println(" Hz");

    cycleCount = 0;             // Reset counter
    lastPrintTime = millis();    // Reset timer
  }
}
